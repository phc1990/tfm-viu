[REQUIRED]
# Comma-separated list of filters
FILTERS                         = U,UVW1                      
# Available values: {CSV}
OBSERVATIONS_REPOSITORY         = CSV
# Available values: {HTTP_PYTHON,HTTP_CURL}
XSA_CRAWLER                     = HTTP_PYTHON
# Available values: {DS9}
FITS_INTERFACE                  = DS9
# Available values: {STDIO}
INPUT_INTERFACE                 = STDIO
# Available values: {CSV}
OUTPUT_RECORDER                 = CSV

# Only when OBSERVATIONS_REPOSITORY = CSV
[OBSERVATIONS_REPOSITORY_CSV]   
# Observations CSV file location
CSV_FILEPATH                    = ./python/test/data/obs.csv
# Number of top lines to ignore
IGNORE_TOP_N_LINES              = 1

# Only when XSA_CRAWLER = {HTTP_PYTHON,HTTP_CURL}
[XSA_CRAWLER_HTTP]              
# XSA base url (e.g. http://nxsa.esac.esa.int/nxsa-sl/servlet/data-action-aio)
BASE_URL                        = http://nxsa.esac.esa.int/nxsa-sl/servlet/data-action-aio
# Regular expression to filter donwloaded files (e.g. ^.*?FSIMAG.*?\.FTZ$)
REGEX                           = ^.*?FSIMAG.*?\.FTZ$
# Directory where files will be downloaded
DOWNLOAD_DIRECTORY              = ./temp

# Only when FITS_INTERFACE = DS9
[FITS_INTERFACE_DS9]            
# DS9 binary file location
DS9_BINARY_FILEPATH             = ./python/test/data/ds9
# Default zoom level (http://ds9.si.edu/doc/ref/command.html#zoom)
ZOOM                            = to fit
# Available values: {TRUE,FALSE}
ZSCALE                          = TRUE

# Only when OUTPUT_RECORDER = CSV
[OUTPUT_RECORDER_CSV]   
# Output CSV file location
CSV_FILEPATH                    = ./temp/screening_output.csv
# Available values: {TRUE,FALSE}
INCLUDE_HEADERS                 = TRUE 
